{"ast":null,"code":"// import React, { useEffect, useContext } from \"react\";\n// import classes from \"./FavoriteItemsList.module.css\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faTrash, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n// import { fetchFavoriteItems, removeFavoriteItem } from \"../services/api\";\n// import AuthContext from \"./context/AuthProvider\";\n// import { useNavigate } from \"react-router-dom\";\n// import LogoImg from \"../images/LogoImg.png\";\n\n// function FavoriteItemsList({ favoriteItems, setFavoriteItems }) {\n//   const { auth, isLoggedIn } = useContext(AuthContext);\n\n//   const navigate = useNavigate();\n\n//   const navigateToHome = () => {\n//     navigate(\"/\");\n//   };\n\n//   useEffect(() => {\n//     if (isLoggedIn && auth && auth.user) {\n//       fetchFavoriteItems(auth.user.sub)\n//         .then((response) => {\n//           const itemsOnly = response.data.map((fav) => fav.item);\n//           setFavoriteItems(itemsOnly);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching favorite items:\", error);\n//         });\n//     }\n//   }, [isLoggedIn, auth, setFavoriteItems]);\n\n//   const handleRemoveFavorite = async (itemId) => {\n//     try {\n//       await removeFavoriteItem(itemId);\n//       setFavoriteItems(favoriteItems.filter((item) => item.id !== itemId));\n//     } catch (error) {\n//       console.error(\"Error removing favorite item:\", error);\n//     }\n//   };\n\n//   const importImage = (imageName) => {\n//     try {\n//       return require(`../images/${imageName}.png`);\n//     } catch (err) {\n//       console.error(\"Error importing image: \", err);\n//       return null;\n//     }\n//   };\n\n//   const specificImages = Array.from({ length: 20 }, (_, index) => ({\n//     id: index + 1,\n//     photo: importImage(`item${index + 1}`),\n//   }));\n\n//   const getSpecificPhotoById = (itemId) => {\n//     const specificImage = specificImages.find((image) => image.id === itemId);\n//     return specificImage ? specificImage.photo : null;\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         <button className={classes.backButton} onClick={navigateToHome}>\n//           <FontAwesomeIcon icon={faArrowLeft} />\n//           Go to Home\n//         </button>\n//         <img src={LogoImg} alt=\"Logo\" className={classes.imgg} />\n//       </div>\n\n//       <div className={classes.favoriteItemsList}>\n//         <ul>\n//           {favoriteItems && favoriteItems.length > 0 ? (\n//             favoriteItems.map((item, index) => (\n//               <li\n//                 key={\n//                   item.id !== undefined\n//                     ? item.id\n//                     : `${item.name}-${item.price}-${index}`\n//                 }\n//               >\n//                 <img\n//                   src={getSpecificPhotoById(item.id)}\n//                   alt={`Item ${item.id}`}\n//                 />\n//                 <div>\n//                   <h3>{item.name}</h3>\n//                   <p>Price: ${item.price}</p>\n//                   <p>Available: {item.stock} items</p>\n//                   <button\n//                     aria-label={`Remove ${item.name} from favorites`}\n//                     onClick={() => handleRemoveFavorite(item.id)}\n//                   >\n//                     <FontAwesomeIcon icon={faTrash} />\n//                   </button>\n//                 </div>\n//               </li>\n//             ))\n//           ) : (\n//             <li>No favorite items available.</li>\n//           )}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default FavoriteItemsList;","map":{"version":3,"names":[],"sources":["C:/Users/Matan/Pictures/test-project/NfTsWebSiteStore-FE/src/components/FavoriteItemsList.js"],"sourcesContent":["// import React, { useEffect, useContext } from \"react\";\r\n// import classes from \"./FavoriteItemsList.module.css\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faTrash, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { fetchFavoriteItems, removeFavoriteItem } from \"../services/api\";\r\n// import AuthContext from \"./context/AuthProvider\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import LogoImg from \"../images/LogoImg.png\";\r\n\r\n// function FavoriteItemsList({ favoriteItems, setFavoriteItems }) {\r\n//   const { auth, isLoggedIn } = useContext(AuthContext);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const navigateToHome = () => {\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (isLoggedIn && auth && auth.user) {\r\n//       fetchFavoriteItems(auth.user.sub)\r\n//         .then((response) => {\r\n//           const itemsOnly = response.data.map((fav) => fav.item);\r\n//           setFavoriteItems(itemsOnly);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching favorite items:\", error);\r\n//         });\r\n//     }\r\n//   }, [isLoggedIn, auth, setFavoriteItems]);\r\n\r\n//   const handleRemoveFavorite = async (itemId) => {\r\n//     try {\r\n//       await removeFavoriteItem(itemId);\r\n//       setFavoriteItems(favoriteItems.filter((item) => item.id !== itemId));\r\n//     } catch (error) {\r\n//       console.error(\"Error removing favorite item:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const importImage = (imageName) => {\r\n//     try {\r\n//       return require(`../images/${imageName}.png`);\r\n//     } catch (err) {\r\n//       console.error(\"Error importing image: \", err);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   const specificImages = Array.from({ length: 20 }, (_, index) => ({\r\n//     id: index + 1,\r\n//     photo: importImage(`item${index + 1}`),\r\n//   }));\r\n\r\n//   const getSpecificPhotoById = (itemId) => {\r\n//     const specificImage = specificImages.find((image) => image.id === itemId);\r\n//     return specificImage ? specificImage.photo : null;\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <button className={classes.backButton} onClick={navigateToHome}>\r\n//           <FontAwesomeIcon icon={faArrowLeft} />\r\n//           Go to Home\r\n//         </button>\r\n//         <img src={LogoImg} alt=\"Logo\" className={classes.imgg} />\r\n//       </div>\r\n\r\n//       <div className={classes.favoriteItemsList}>\r\n//         <ul>\r\n//           {favoriteItems && favoriteItems.length > 0 ? (\r\n//             favoriteItems.map((item, index) => (\r\n//               <li\r\n//                 key={\r\n//                   item.id !== undefined\r\n//                     ? item.id\r\n//                     : `${item.name}-${item.price}-${index}`\r\n//                 }\r\n//               >\r\n//                 <img\r\n//                   src={getSpecificPhotoById(item.id)}\r\n//                   alt={`Item ${item.id}`}\r\n//                 />\r\n//                 <div>\r\n//                   <h3>{item.name}</h3>\r\n//                   <p>Price: ${item.price}</p>\r\n//                   <p>Available: {item.stock} items</p>\r\n//                   <button\r\n//                     aria-label={`Remove ${item.name} from favorites`}\r\n//                     onClick={() => handleRemoveFavorite(item.id)}\r\n//                   >\r\n//                     <FontAwesomeIcon icon={faTrash} />\r\n//                   </button>\r\n//                 </div>\r\n//               </li>\r\n//             ))\r\n//           ) : (\r\n//             <li>No favorite items available.</li>\r\n//           )}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FavoriteItemsList;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}